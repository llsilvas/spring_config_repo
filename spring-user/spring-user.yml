server:
  port: 8091

spring:
  application:
    name: spring-user

  cloud:
    config:
      fail-fast: true
      retry:
        max-attempts: 6
        initial-interval: 2000
        multiplier: 1.5
        max-interval: 10000
    bus:
      refresh:
        enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_URL}:8443/realms/event-management
          jwk-set-uri: http://${KEYCLOAK_URL}:8443/realms/event-management/protocol/openid-connect/certs
  keycloak:
    admin:
      client-id: ${KEYCLOAK_CLIENT_ID:user-service-admin}
      client-secret: ${KEYCLOAK_CLIENT_SECRET:default-secret}  # Nunca manter senhas reais aqui, apenas para fallback
      auth-server-url: http://${KEYCLOAK_AUTH_SERVER_URL:localhost:8443}
      realm: ${KEYCLOAK_REALM:event-management}

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: 5672
    connection-timeout: 5

loki:
  url: "http://${LOKI_URL:localhost}:3100/loki/api/v1/push"
  jobName: ${LOKI_JOB_NAME:spring-user}

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus, info, refresh, bus-refresh

logging:
  pattern:
    correlation: '%X{traceId:-} %X{spanId:-}'
    level: '%-5level [${spring.application.name}]'
  include-application-name: true
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.boot: INFO
    org.springframework.security: INFO
    org.springframework.cloud.bus: INFO
    org.springframework.cloud: INFO 
    org.springframework.cloud.config: INFO
    org.keycloak: INFO
    io.opentelemetry: INFO
    io.micrometer: INFO

app: 
  message: Default message
